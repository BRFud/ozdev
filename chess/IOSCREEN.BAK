/*
  This handles the display of the board and other information.
  No effort was made to make a 'fancy' display.
*/


#define HEADER
#include "arvar.c"

extern uchar currow,curcol;

static void printpiece(int row,int col)
/* print the piece or square.  Reverse colors for black piece or square */
{
 static int pos,piece;
 static char c1;

 static bool parity;

pos=row*8+col;piece=board[pos];
parity=odd(row+col);
if(piece)
{
    if(brdcolor[pos]==WHITE && parity)
    {
        reversevideo=0xFF;
        c1=piece+19;
    }
    else if(brdcolor[pos]==WHITE)
    {
        c1=piece+25;
    }
    else if(parity)
    {
        c1=piece+25;
        reversevideo=0xFF;
    }
    else
    {
        c1=piece+19;
        reversevideo=0;
    }
}
else
{
    c1=' ';
    if(parity) reversevideo=0xFF;
}


/*
if (piece)
 {
    c1=piece+25;
    if(brdcolor[pos]==WHITE) reversevideo=0xFF;
 }
else
  {
    if(odd(row+col)) c1=25; else c1=' ';
  }
*/
outchar(c1);
reversevideo=0;
}

void atright(void)
{
    curcol=13;
}

void printboard(void)
/*prints the board on the screen. also displays various stats*/
{
static int row,col;

clrscr();
currow=0;
atright();
printf("AR-Chess V 1.0b\n");
findpieces();

atright();
printf("To move: %s\n",(tomove==WHITE)?"WHITE":"BLACK");
atright();
printf("Move #: %d\n",movenum);
atright();
printf("Est score:%d\n",estscore);
atright();
printf("Material: %d\n",mtl[tomove]-mtl[chngcolor(tomove)]);

atright();
if (tcontrol) printf("TM: %d\n",responsetime);
else           printf("Level: %d\n",playlevel);
atright();
printf("Used: %d:%d:%d\n",
       ElapClock/3600,(ElapClock/60)%60,ElapClock%60);

curcol=currow=0;

if (reverse)
  {printf("  HGFEDCBA\n");
   for (row=0;row<=7;row++)
     {printf("%d ",row+1);
      for (col=7;col>=0;col--) printpiece(row,col);
      printf(" %d\n",row+1);
     }
   printf("  HGFEDCBA");
  }
else {
    printf("  ABCDEFGH\n");
    for (row=7;row>=0;row--)
       {printf("%d ",row+1);
        for (col=0;col<=7;col++) printpiece(row,col);
        printf(" %d\n",row+1);
       };
    printf("  ABCDEFGH");
   }
}

